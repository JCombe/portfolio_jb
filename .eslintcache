[{"/Users/bruslan/Projects/portfolio_jb/src/index.js":"1","/Users/bruslan/Projects/portfolio_jb/src/App.js":"2","/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Footer.js":"3","/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Bio.js":"4","/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Skills.js":"5"},{"size":147,"mtime":1611343179819,"results":"6","hashOfConfig":"7"},{"size":337,"mtime":1611343179816,"results":"8","hashOfConfig":"7"},{"size":426,"mtime":1611345998523,"results":"9","hashOfConfig":"7"},{"size":1184,"mtime":1611345377992,"results":"10","hashOfConfig":"7"},{"size":1218,"mtime":1611343179818,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16sji6q",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/bruslan/Projects/portfolio_jb/src/index.js",[],["24","25"],"/Users/bruslan/Projects/portfolio_jb/src/App.js",[],"/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Footer.js",["26"],"/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Bio.js",[],"/Users/bruslan/Projects/portfolio_jb/src/Components/Pages/Skills.js",["27","28","29"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport \"./Skills.css\"\nimport webDevIcn from '../webDevIcn.png'\nimport sketchIcn from '../sketchIcn.png'\n\nfunction Skills() {\n    return (\n        <div className=\"skillsBG\">\n            <h2 className=\"stageHeadline\"> Skills/ Portfolio </h2>\n\n            <div className=\"gridBox\">\n                <div className=\"skillBox\">\n                    <div className=\"imgBox\">\n                        <img src={webDevIcn} className=\"imgPos\" />\n                    </div>\n\n                    <div className=\"skillBoxTitle\">Web Dev</div>\n                    <div className=\"skillBoxTxt\">Developement of modern web-applications and API's using HTML5, JavaScript, CSS</div>\n                </div>\n\n                <div className=\"skillBox\">\n                    <div className=\"imgBox\">\n                        <img src={sketchIcn} className=\"imgPos\" />\n                    </div>\n\n                    <div className=\"skillBoxTitle\">Grafic Design</div>\n                    <div className=\"skillBoxTxt\">Design of aesthetic and user-friendly interfaces using Sketch, Figma</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Skills\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":13,"column":17,"nodeType":"36","endLine":13,"endColumn":36},{"ruleId":"37","severity":1,"message":"38","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":15,"column":25,"nodeType":"36","endLine":15,"endColumn":67},{"ruleId":"41","severity":1,"message":"42","line":24,"column":25,"nodeType":"36","endLine":24,"endColumn":67},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]